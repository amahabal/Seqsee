[Extend 01.1]
# Spurious Groups and controls
# Expectation:the first harder than the second.
Type = AskOne
# ExpectedDifficulty is from easier to harder
ExpectedDifficulty = 2;1
seq = 1 1 1 2 1 3|1 4 1 5 1 6 1 7 1 8
seq = 1 4 1 5 1 6|1 7 1 8 1 9 1 10

[Extend 01.2]
# Spurious Groups and controls
# Expectation:the first harder than the second.
Type = AskOne
ExpectedDifficulty = 2;1
seq = 6 7 7 7 8 7 9 7|10 7 11 7 12 7 13 7
seq = 1 7 2 7 3 7 4 7|5 7 6 7 7 7 8 7 9 7

[Extend 02]
# Spurious Groups and controls
Type = AskOne
ExpectedDifficulty = 2;3;1
seq = 2 1 2 2 2 2 2 3 2 2 4 2| 2 5 2 2 6 2 2 7 2 2 8 2
seq = 7 1 7 7 2 7 7 3 7 7 4 7| 7 5 7 7 6 7 7 7 7 7 8 7
seq = 2 1 2 2 2 2 2 3 2 2 4 2 2 5 2|2 6 2 2 7 2 2 8 2 2 

[Extend 03]
# Non-Uniform change
# Expectataion: 1/2 easy, 3/4 hard
Type = AskAll
ExpectedDifficulty = 1,2;3,4
seq = 21 19 22 20 23 21|24 22 25 23 26 24 25 23 24 22
seq = 23 29 22 28 21 27|20 26 19 25 18 24 17 23 16 22
seq = 11 19 12 18 13 17|14 16 15 15 16 14 17 13
seq = 17 10 16 11 15 12|14 13 13 14 12 15 11 16

[Extend 04]
# Expectataion: 1 harder
Type = AskAll
ExpectedDifficulty = 2;1
seq = 1 1 2 1 2 3|1 2 3 4 1 2 3 4 5 1 
seq = 1 2 3 1 2 3|1 2 3 1 2 3 1 2 3

[Extend 05]
# Groups Getting Longer in non-st ways
Type = AskAll
ExpectedDifficulty = 2,3;1,4
# Hard?
seq = 15 14 15 13 14 15| 12 13 14 15 11 12 
# Easy?
seq = 24 24 25 24 25 26| 24 25 26 27 24
# Easy?
seq = 19 19 18 19 18 17| 19 18 17 16 19
# Hard?
seq = 17 18 17 19 18 17| 20 19 18 17 21

[Extend 06]
# Length contamination
Type = AskOne
ExpectedDifficulty = 1;2
# Easy?
seq = 1 2 2 3 4 5 6 1 2 3 3 3 4 5 6 1 2 3 4 4 4 4 5 6| 1 2 3 4 5 5 5 5 5 6 7 1
# Hard?
seq = 1 2 3 3 4 5 6 1 2 3 4 4 4 5 6 1 2 3 4 5 5 5 5 6| 1 2 3 4 5 6 6 6 6 6 7 1

[Extend 07]
# Two brands of interleaving
Type = AskAll
ExpectedDifficulty = 1;2
# Easy?
seq = 1 18 17 1 2 18 17 16 1 2 3 18 17 16 15|1 2 3 4 18 17 16 15 14 1
# Very Hard?
seq = 1 18 1 17 2 18 1 17 2 16 3 18 1 17 2 16| 3 15 4 18 1 17 2 16 3 15

[Extend 08]
# Familiar labels
Type = AskAll
ExpectedDifficulty = 3;1,2;4
# Easy?
seq = 1 4 9 16 25 36|49 64 81 100 121
# Not very hard? 
seq = 1 9 25 49 81|121 169 225
# Harder?
seq = 2 5 10 17 26| 37 50 65 82 101
# Control, easier
seq = 4 7 10 13 16|19 22 25 28

[Extend 09]
# Length contamination
Type = AskOne
ExpectedDifficulty = 1,3;2,4

# Easy?
seq = 3 3 3 4 4 4 4 5 5 5 5 5| 6 6 6 6 6 6 7 7 7 7 
seq = 3 3 4 4 4 5 5 5 5 |6 6 6 6 6 7 7 7 7 7 7
# Easy?
seq = 2 2 3 3 3 4 4 4 4| 5 5 5 5 5 6 6 6 6 6
seq = 2 2 2 3 3 3 3 4 4 4 4 4| 5 5 5 5 5 5 6 6 6 6

[Extend 10]
# Length contamination/inconsistent change
Type = AskOne
ExpectedDifficulty = 1,3;2,4

# Easy?
seq = 5 5 5 6 6 6 6 7 7 7 7 7|8 8 8 8 8 8 9 9 9 9 
seq = 5 5 5 4 4 4 4 3 3 3 3 3| 2 2 2 2 2 2 1 1 1 1
# Easy?
seq = 5 5 5 5 5 5 4 4 4 4 4 3 3 3 3| 2 2 2 1 1 0
seq = 5 5 5 5 5 5 6 6 6 6 6 7 7 7 7| 8 8 8 9 9 10

[Extend 11]
# Same things act similar...
ExpectedDifficulty = 2,3;1,4
Type = AskOne
seq = 6 2 6 5 2 7 4 2 8|3 2 9 2 2 10 1 2 11
seq = 6 2 6 7 2 7 8 2 8| 9 2 9 10 2 10 11 2 11
seq = 6 2 6 5 2 5 4 2 4| 3 2 3 2 2 2 1 2 1
seq = 6 2 6 7 2 5 8 2 4| 9 2 3 10 2 2 11 2 1

[Extend 12.1]
# Resistance to blemish
Type = AskOne
seq = 17 1 2 3 4 5 6| 7 8 9 10 11 12 13 14 15
seq = 1 1 2 2 3 3 3 4 4 5 5| 6 6 7 7 8 8 9 9

[Extend 12.2]
# Resistance to blemish
Type = AskOne
seq = 1 2 3 4 18 5 6 7 8|
seq = 1 2 3 4 18 6 7 8 9|

[Extend 13]
# Groups of size 1
Type = AskOne
ExpectedDifficulty = 1,2
seq = 1 2 2 3 3 3|4 4 4 4 5 5 5 5 5 6
seq = 2 2 3 3 3 4 4 4 4|5 5 5 5 5 6 6 6 6 6 6

[Extend 14]
# Resistance to squinting type/position changing.
Type = AskOne
ExpectedDifficulty = 1;2,3;4
# Neither change
seq = 1 1 1 2 3 1 1 1 2 3 4 1 1 1 2 3 4 5| 1 1 1 2 3 4 5 6 1 1 1 2
# Position changes
seq = 1 1 1 2 3 1 2 2 2 3 4 1 2 3 3 3 4 5| 1 2 3 4 4 4 5 6 1 2 3 4 
# Type changes
seq = 1 1 2 3 1 1 1 2 3 4 1 1 1 1 2 3 4 5| 1 1 1 1 1 2 3 4 5 6 1
# Both
seq = 1 1 2 3 1 2 2 2 3 4 1 2 3 3 3 3 4 5| 1 2 3 4 4 4 4 4 5 6

# Sequences whose timing data I'd like to collect
[Extend 15]
Type = AskOne
ExpectedDifficulty = 1;3;2
seq = 1 7 2 8 3 9|4 10 5 11 6 12 7 13
seq = 1 7 1 2 8 1 2 3 9|1 2 3 4 10 1 2 3 4 5 11
seq = 1 7 19 2 8 20 3 9 21|4 10 22 5 11 23 6

[Extend 16]
Type = AskOne
ExpectedDifficulty = 1;2
seq = 1 7 19 2 8 19 20 3 9 19 20 21| 4 10 19 20 21 22 5 11 19 20
seq = 1 7 19 2 8 20 21 3 9 22 23 24| 4 10 25 26 27 28 5 11 29 30

[Extend 17]
Type = AskAll
# Base case of sorts: gives some sense of *minimum* time needed to enter data.
seq = 1 2 3 4 5 6|7 8 9 10 11 
# Two more base cases when interlaced sequences involved:
seq = 1 7 1 7 1 7 1 7 1 7|1 7 1 7 1 7 1 7
seq = 1 7 19 1 7 19 1 7 19 1 7 19| 1 7 19 1 7 19 1 7 19
# Other sequences seqsee will/should handle
seq = 1 0 0 1 1 1 0 0 0 0|1 1 1 1 1 0 0 0 0 0 0
seq = 1 2 3 3 4 4 5 5 5 6 6 6| 7 7 7 7 8 8 8 8 9 9
seq = 5 4 3 4 5 4 3 4 5| 4 3 4 5 4 3 4 5 4 3
seq = 1 2 3 17 3 4 5 17 5 6 7 17| 7 8 9 17 9 10 11 17 11 12 13 17
seq = 1 2 1 1 2 3 2 1 1 2 3 4 3 2 1|1 2 3 4 5 4 3 2 1

[Extend 18]
Type = AskAll
seq = 1 1 2 3 1 2 2 3 1 2 3 3 1 1 2 3 1 2 2 3| 1 2 3 3 1 1 2 3 1 2 2 3
seq = 1 1 2 3 1 2 2 3 1 2 3 3 1 2 2 3 1 1 2 3| 1 2 2 3 1 2 3 3 1 2 2 3
seq = 1 2 2 3 3 1 1 2 3 3 4 4 1 1 2 2 3 4 4 5 5| 1 1 2 2 3 3 4 5 5 6 6


[Variation 1]
Type = AskAll
seq = 1 2 3 1 2 2 3 1 2 2 2 3|
seq = 1 2 2 3 4 1 2 3 3 4 5 1 2 3 4 4 5 6|
seq = 5 6 1 2 3 5 6 7 1 2 3 4 5 6 7 8 1 2 3 4 5|
seq = 1 2 3 4 6 1 2 3 4 5 7 1 2 3 4 5 6 8|
seq = 1 9 25 49 81 |
seq = 1 1 2 2 1 1 1 2 2 3 3 2 1 1 1 2 2 3 3 4 4 3 2 1|
seq = 1 1 2 3 1 2 2 3 1 2 3 3 1 2 2 3 1 1 2 3|

# Can be parsed two ways: oscillating, or [3 4 5 4] repeated.
seq = 3 4 5 4 3 4 5 4 3 4 5 4|
seq = 7 7 8 7 8 9 7 8 9 10|

# variation might indicate what they are seeing this as:
# squares + 1, or delta increasing odd number.
seq = 2 5 10 17 26 37 50 65|