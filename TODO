This is going to be a huge list...

* Unify runNoTk and runTk into one program called Seqsee which takes the option --tk.
	Done * use Tk::Getopt for this if it works
	Done * using BEGIN{} define the method main::GUI using constants
	* Create framework for menus,
	* create windows for Info, Coderack, Slipnet and Stream
	* In each method that modifies the WS or coderack, have a call that looks like C<< if(::GUI) { ... a method that modifies the view ... }. This will be removed by the compiler in the non-GUI mode
	* In each package, define the method LOGGING_INFO and LOGGING_DEBUG similarly
	* write code in Tk::SWorkspace that'd be able to deal with bonds and groups etc. Think through and implement how I can make incremental changes.
	* Check if just using splines removes the need for me to have to deal with how bonds go.
	* Think through how callbacks will happen
	* Think about how I can let the program run several steps slowly stepping through without having to press the button each time.

* experiment with C<< perl -MO=Xref prog.pl > dump >>

* I should maybe work on the workspace for a bit. Lots of stuff there that can be lifted to this new environment.

* Need to create groups.

* Write a lot of examples including descriptions, bonds, groups etc.

* Create class SObject (from which SElement and SGroup derive), and add stuff to this like promote/add/remove bonds and groups, and add similar functionality to the WS.

* Write as_str() methods for the various classes.

