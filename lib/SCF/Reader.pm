
package SCF::Reader;
{
    my ($logger, $is_debug, $is_info);
    BEGIN{ $logger   = Log::Log4perl->get_logger("SCF::Reader"); 
           $is_debug = $logger->is_debug();
           $is_info  = $logger->is_info();
         }
    sub LOGGING_DEBUG() { $is_debug; }
    sub LOGGING_INFO()  { $is_info;  }
}

my $logger = Log::Log4perl->get_logger("SCF::Reader"); 
sub run{
    my $codelet  = shift;
    my $opts_ref = $codelet->[3];
    if (LOGGING_INFO()) {
        my $msg = $codelet->generate_log_msg();

        $logger->info( $msg );
    }
    ################################
    ## Code above autogenerated.
    ## Insert Code Below

    my $object = SWorkspace->read_object();
    if (LOGGING_INFO() and $object) {
        my ($l, $r, $s) = ($object->get_left_edge,
                           $object->get_right_edge,
                           $object->get_structure,
                               );
        my $msg = "Read Object:\n\t[$l,$r] $s\n";
        $logger->info( $msg );
    }

    if ( $object ) {
        SStream->add_thought( SThought->new( { core => $object }));
    }
}

1;
