package SCF::FindReln;
use strict;
use Smart::Comments;
use English qw( -no_match_vars );
use Class::Multimethods;
use Carp;

multimethod 'find_reln';

{
    my ($logger, $is_debug, $is_info);
    BEGIN{ $logger   = Log::Log4perl->get_logger("SCF::FindReln"); 
           $is_debug = $logger->is_debug();
           $is_info  = $logger->is_info();
         }
    sub LOGGING_DEBUG() { $is_debug; }
    sub LOGGING_INFO()  { $is_info;  }
}

my $logger = Log::Log4perl->get_logger("SCF::FindReln"); 
sub run{
    my $action_object  = shift;
    my $opts_ref       = shift;
    if (LOGGING_INFO()) {
        my $msg = $action_object->generate_log_msg();

        $logger->info( $msg );
    }
    ################################
    ## Code above autogenerated.
    ## Insert Code Below

    my $a = $opts_ref->{a} or confess "Need a";
    my $b = $opts_ref->{b} or confess "Need b";
    # print "Running a FindReln codelet!\n";
    
    my $reln;
    $reln = find_reln( $a, $b );
    if ($reln) {
        SCoderack->force_thought( SThought->create($reln) );
    }
}

1;
